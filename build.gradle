// Global gradle configuration. This configuration will be used for all sub-projects.
apply from: './configuration.gradle'
apply from: './repositories.gradle'
apply from: './dependencies.gradle'

/**
 * Global build script configuration ===============================================================
 */
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
        classpath 'universum.studios.gradle:github-plugin:1.1.2'
    }
}

/**
 * All projects global configuration ===============================================================
 */
allprojects {
    repositories {
        jcenter()
    }
}

/**
 * All projects global tasks =======================================================================
 */
/**
 * Task that may be used to access Gradle Wrapper.
 */
task wrapper(type: Wrapper) {
    gradleVersion = versions.gradle
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

/**
 * Task that cleans build directory of the root project.
 */
task clean(type: Delete) {
    delete rootProject.buildDir
}

/**
 * Task that updates library artifacts directory.
 */
task updateArtifacts() {
    subprojects.findAll { if (it.name.startsWith("library")) dependsOn ":${it.name}:updateArtifacts" }
    doLast {
        if (file(repos.project.artifacts).exists()) {
            exec {
                commandLine 'git', 'add', repos.project.artifacts, '-A'
            }
        }
    }
}

/**
 * Task that deploys (uploads) the library into Maven local repository.
 */
task deployToMavenLocal(dependsOn: ':library:uploadArchives') {
    group 'deploy'
    description 'Deploys primary artifact of the library to the local Maven repository.'
}

/**
 * Task that deploys (uploads) the library up to the Bintray repository.
 */
task deployToBintray(dependsOn: ':library:bintrayUpload') {
    group 'deploy'
    description 'Deploys primary artifact of the library up to the Bintray repository.'
}

/**
 * Task that deploys (uploads) the library up to the GitHub repository.
 */
task deployToGitHub(dependsOn: ':library:githubUploadProductionRelease') {
    group 'deploy'
    description 'Deploys primary artifact of the library up to the GitHub repository.'
}